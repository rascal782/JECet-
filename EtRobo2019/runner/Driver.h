/**
 ******************************************************************************
 ** ファイル名 : Driver.h
 ** クラス名   : Driver
 **
 ** 概要 : 走行体に指示するクラス
 ******************************************************************************
 **/
#ifndef RUNNER_DRIVER_H
#define RUNNER_DRIVER_H

#include "Runner.h"
#include "../scenario/Course.h"
#include "Clock.h"

class Driver
{
private:
    Runner* runner;
    Course* mCourse;
    Course dCourse[4]{
   /* テスト用　ライントレースし続けるだけ　*/
   /*  {  距離,時間,衝撃,障害,  前進,旋回,尻尾,Gyro  P   ,    I   ,    D  ,目標RGB,走行法} */
       {     1,    0,  0,  0,      60,  0, 95,   0, 0.0300F, 0.0000F, 1.0000F, 1.00F, 1 },  //  初期化配列
       {     0,    8,  0,  0,      60,  0, 96,   0, 0.0300F, 0.0000F, 1.0000F, 1.00F, 1 },  //  Start時
       { 20000,    0,  0,  0,      40,  0,  0,   0, 0.0900F, 0.0000F, 0.8000F, 1.10F, 1 },  //  ライントレース
       {     0,    0,  0,  0,       0,  0, 81,   0, 0.0000F, 0.0000F, 0.0000F, 1.00F, 0 }   //  完全停止用終端配列
    };
    Course lCourse[4]{
   /* テスト用　ライントレースし続けるだけ　*/
   /*  {  距離,時間,衝撃,障害,  前進,旋回,尻尾,Gyro  P   ,    I   ,    D  ,目標RGB,走行法} */
       {     1,    0,  0,  0,      60,  0, 95,   0, 0.0300F, 0.0000F, 1.0000F, 1.00F, 1 },  //  初期化配列
       {     0,    8,  0,  0,      60,  0,100,   0, 0.0300F, 0.0000F, 1.0000F, 1.00F, 1 },  //  Start時
       { 90000,    0,  0,  0,      60,  0,  0,   0, 0.1000F, 0.0001F, 0.6000F, 1.10F, 1 },
       {     0,    0,  0,  0,       0,  0, 81,   0, 0.0000F, 0.0000F, 0.0000F, 1.00F, 0 }   //  完全停止用終端配列
    };
    Course rCourse[4]{
   /* テスト用　ライントレースし続けるだけ　*/
   /*  {  距離,時間,衝撃,障害,  前進,旋回,尻尾,Gyro  P   ,    I   ,    D  ,目標RGB,走行法} */
       {     1,    0,  0,  0,      60,  0, 95,   0, 0.0300F, 0.0000F, 1.0000F, 1.00F, 1 },  //  初期化配列
       {     0,    8,  0,  0,      60,  0,100,   0, 0.0300F, 0.0000F, 1.0000F, 1.00F, 1 },  //  Start時
       { 90000,    0,  0,  0,      60,  0,  0,   0, 0.1000F, 0.0001F, 0.6000F, 1.10F, 1 },
       {     0,    0,  0,  0,       0,  0, 81,   0, 0.0000F, 0.0000F, 0.0000F, 1.00F, 0 }   //  完全停止用終端配列
    };
    Clock* clock;
    int beforeDistance;
    int beforeClock;
    int courseNumber = 0;

public:
    Driver();
    void start();
    void exec();
    int courseChange();
    void btUpdate();

};
#endif  // RUNNER_DRIVER_H